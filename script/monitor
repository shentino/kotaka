#!/bin/bash

# signal handlers

# note: we don't CARE if wait gets interrupted
# all handled signals are fatal for the script

function sigterm
{
	echo "+++ Monitor received SIGTERM, terminating DGD +++"
	trap - SIGTERM
	kill -TERM $DGDPID
	kill -TERM $$
}

function sigint
{
	echo "+++ Monitor received SIGINT, killing DGD +++"
	trap - SIGINT
	kill -KILL $DGDPID # DGD ignores SIGINT
	kill -INT $$
}

function sighup
{
	echo "+++ Monitor received SIGINT, killing DGD +++"
	trap - SIGINT
	kill -KILL $DGDPID # DGD ignores SIGINT
	kill -INT $$
}

# subroutines

function execdgd
{
	trap - SIGHUP
	trap - SIGINT
	trap - SIGTERM
	exec ~/bin/dgd $*
}

function boot
{
	rm -f state/swap
	if [ -f state/snapshot ]
	then
		echo "--- DGD warm booting ---"
		if [ -f state/snapshot.old ]
		then
			# both are present, possible incremental snapshot
			execdgd kotaka.dgd state/snapshot state/snapshot.old &
		else
			# only the full one
			CATCH=1
			execdgd kotaka.dgd state/snapshot &
		fi
	else
		if [ -f state/snapshot.old ]
		then
			# we only have the old one
			echo "--- DGD cool booting ---"
			execdgd kotaka.dgd state/snapshot.old &
		else
			# complete cold start
			echo "--- DGD cold booting ---"
			execdgd kotaka.dgd &
		fi
	fi
	DGDPID=$!
}

function exited
{
	case $EXITCODE in
	0)
		echo "--- DGD terminated normally ---"
		;;
	*)
		echo "--- DGD terminated abnormally (code $EXITCODE) ---"
		exit
		;;
	esac
}

function crashed
{
	if [ -f mud/core ]
	then
		rm -rf crash
		mkdir crash
		gdb dgd mud/core -batch -ex bt > crash/trace
		mv mud/core crash
		echo "+++ DGD terminated by SIG$SIGNAME (core dump processed) +++"
	else
		echo "+++ DGD terminated by SIG$SIGNAME +++"
	fi
}

function signalled
{
	SIGNAME=`kill -l $(( EXITCODE - 128 ))`

	case $SIGNAME in
	KILL|TERM|INT|HUP)
		echo "+++ DGD terminated by SIG$SIGNAME +++"
		exit
		;;
	*)
		crashed
		;;
	esac
}

function doexit
{
	if (( EXITCODE < 128 ))
	then
		exited
	else
		signalled
	fi
}

cd ~/git/kotaka

exec < /dev/null
exec >> kotaka.err
exec 2>&1

trap sigterm SIGTERM
trap sigint SIGINT
trap sighup SIGHUP

set -m

echo "--- Monitor starting ---"

while true
do
	boot
	wait $DGDPID
	EXITCODE=$?
	doexit
done
