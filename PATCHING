Object patching
---------------

Run time object upgrading is based on DGD's inherent ability to recompile an object in place.

Further enforced by the kernel library's policy of libraries being arbitrarily destructible.

1.  Collection of information

	When a program is compiled, the initd responsible for its source
	will be queried for a patcher function, which will be stored in
	the program_info associated with the program in question.

	The information is queried at compilation time and immutable
	until the program is recompiled.

	If the program being compiled is inheritable, the process stops here.

2.  Collection of patchers

	When an object that is not an inheritable is compiled, it is
	checked for patching.

	Once the compilation is finished, it, and all of its inherits
	(direct or otherwise) are checked for patcher functions that were
	collected during the previous step.  Any patchers are collected
	in a list.

3.  Collection of patchable objects

	Once the list of patchers is collected, the object that was
	compiled and all of its clones are discovered and added to
	PatchD's collection of objects in need of patching.

	Each object in PatchD's collection will be associated with the
	list of patchers collected in step 2.

	All such patchable objects will also be flagged with call_touch,
	and given a patch touch.

	The touch will ensure that the object is patched before it is
	accessed.

	Warnings:

		Recompiling an object where it or any of its clones have
		outstanding patches will cause the object's list of
		outstanding patches to be reset, and any patchers in the
		previous list not present in the new list will not be
		called.

4.  Patching

	Any object that is touched during normal operation will trigger
	the immediate application of its outstanding patches before the
	access continues.

	PatchD will also be running a process to regularly touch each
	object that it has listed as having outstanding patches.

5.  Completion

	Once all objects in PatchD's collection of patchables have been
	patched, the process is completed.
