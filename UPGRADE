How to upgrade your mud
-----------------------

Every upgrade has the following sequence of events:

1.  upgrade kotaka

	Use the upgrade command to start the upgrade process.

	This command is responsible for taking care of all of kotaka's
	native code.

2.  obsolete & stale

	Check for any objects that need to be recompiled because of
	changed inherits or includes.

3.  rebuild

	For a quick method to rebuild everything, use the rebuild
	command.

4.  prepare for changes

	If there are any API changes in kotaka, they will be announced
	at least one version in advance.

	Kotaka will (or at least should) be able to handle BOTH api's at
	the same time until the old one has been deprecated and removed.

Current API changes pending
---------------------------

Rename in the toucher/patcher API

	Because call_touch can be useful in areas other than upgrade
	management, I've decided that touches used to handle upgrades should
	be treated separately from manual touches, and it will be cleaner
	to give them a new name.

	Deprecations:

	*	program_info->query_toucher is deprecated.
		Please use program_info->query_patcher from now on.

		Debug warnings will be emitted for code using the old way.

	*	ObjectD will now ask initd's for patch functions using the
		query_patcher hook, instead of the query_toucher hook.

		Debug warnings will be emitted for initds providing the old
		hook in place of the new one.

		UpgradeD will destruct LIB_INITD.  Any initd inheriting
		this object should be recompiled.
